{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Documents/todos/todo-react/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport formatDate from '../../utils/formaDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState('');\n  const [editText, setEditText] = useState('');\n  const [editing, setEditing] = useState(null);\n  const [toggle, setToggle] = useState(false);\n  const [todos, setTodos] = useState([]);\n  var val = false;\n  const activeTodoCount = 0;\n  useEffect(() => {\n    api.get('/tasks').then(response => {\n      setTodos(response.data);\n    });\n    console.log(todos);\n  }, []);\n\n  async function handleNewTodo(event) {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    event.preventDefault();\n    api.post('/tasks', {\n      title: event.target.value,\n      completed: false\n    }).then(response => {\n      const todo = response.data;\n      setTodos([...todos, todo]);\n      console.log(todos);\n    });\n    setNewTodo(\"\");\n    console.log(newTodo);\n  }\n\n  async function handleCheckChangeTodo(todo) {\n    const {\n      id,\n      completed\n    } = todo;\n    const todoIndex = todos.findIndex(todo => {\n      return todo.id === id;\n    });\n    todos[todoIndex].completed = !completed;\n    setTodos([...todos]);\n    api.put(`/tasks/${id}`, {\n      id,\n      completed: !completed\n    }).then(response => {\n      const todo = response.data;\n      console.log(todo);\n    });\n  }\n\n  async function handleSubmit(todo) {\n    const {\n      id\n    } = todo;\n    const todoIndex = todos.findIndex(todo => {\n      return todo.id === id;\n    });\n\n    if (todos[todoIndex].title !== editText) {\n      todos[todoIndex].title = editText;\n      api.put(`/tasks/${id}`, {\n        title: editText\n      }).then(response => {\n        const todo = response.data;\n        setTodos([...todos]);\n        console.log(todo);\n        setEditing(null);\n      });\n    } else {\n      setEditing(null);\n    }\n  }\n\n  async function handleRemoveTodo(id) {\n    const todoIndex = todos.findIndex(todo => {\n      return todo.id === id;\n    });\n    todos.splice(todoIndex, 1);\n    api.delete(`/tasks/${id}`).then(response => {\n      const todo = response.data;\n      setTodos([...todos]);\n      console.log(todo);\n    });\n  }\n\n  function toggleAll() {\n    todos.forEach(todo => {\n      todo.completed = !toggle;\n    });\n    setToggle(!toggle);\n    setTodos([...todos]);\n  }\n\n  function onEdit(todo, event) {\n    setEditing(todo);\n    setEditText(todo.title);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newField\",\n        className: \"new-todo\",\n        placeholder: \"What needs to be done?\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value),\n        onKeyDown: e => handleNewTodo(e),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"toggle-all\",\n        className: \"toggle-all\",\n        type: \"checkbox\",\n        onChange: e => toggleAll(),\n        checked: activeTodoCount === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggle-all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"toggle\",\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: e => handleCheckChangeTodo(todo)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), !(editing === todo) && /*#__PURE__*/_jsxDEV(\"label\", {\n              onDoubleClick: e => onEdit(todo, e),\n              children: [todo.title, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: [\"Create at \", formatDate(todo.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 41\n            }, this), !(editing === todo) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"destroy\",\n              onClick: e => handleRemoveTodo(todo.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"edit\",\n              type: \"text\",\n              value: editText // onBlur={e => handleSubmit(todo)}\n              ,\n              onChange: e => setEditText(e.target.value) // onKeyDown={e => handleNewTodo(e)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this), editing === todo && /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"editing\",\n              type: \"text\",\n              onDoubleClick: e => setEditText(todo.title),\n              value: editText,\n              onBlur: e => handleSubmit(todo),\n              onChange: e => setEditText(e.target.value) // onKeyDown={e => handleNewTodo(e)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"C/PXE4j8XTdvClf2hukpVYEVbus=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/guilherme/Documents/todos/todo-react/src/pages/Dashboard/index.tsx"],"names":["React","useEffect","useState","api","formatDate","Dashboard","newTodo","setNewTodo","editText","setEditText","editing","setEditing","toggle","setToggle","todos","setTodos","val","activeTodoCount","get","then","response","data","console","log","handleNewTodo","event","key","preventDefault","post","title","target","value","completed","todo","handleCheckChangeTodo","id","todoIndex","findIndex","put","handleSubmit","handleRemoveTodo","splice","delete","toggleAll","forEach","onEdit","e","map","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;;AAUA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAG9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAc,IAAd,CAAtC;AACA,QAAM,CAAEU,MAAF,EAAUC,SAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEY,KAAF,EAASC,QAAT,IAAqBb,QAAQ,CAAS,EAAT,CAAnC;AAEA,MAAIc,GAAG,GAAG,KAAV;AAEA,QAAMC,eAAe,GAAG,CAAxB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACe,GAAJ,CAAgB,QAAhB,EAA0BC,IAA1B,CAA+BC,QAAQ,IAAI;AAEzCL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACD,KAHD;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,GANQ,EAMN,EANM,CAAT;;AAUA,iBAAeU,aAAf,CAA6BC,KAA7B,EAAwD;AACpD,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzB;AACD;;AACDD,IAAAA,KAAK,CAACE,cAAN;AAEAxB,IAAAA,GAAG,CAACyB,IAAJ,CAAS,QAAT,EAAmB;AAACC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,MAAN,CAAaC,KAArB;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KAAnB,EAAmEb,IAAnE,CAAyEC,QAAQ,IAAI;AACnF,YAAMa,IAAI,GAAGb,QAAQ,CAACC,IAAtB;AAEAN,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWmB,IAAX,CAAD,CAAR;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,KALD;AAOAP,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AACH;;AAED,iBAAe4B,qBAAf,CAAqCD,IAArC,EAAgD;AAE9C,UAAM;AAAEE,MAAAA,EAAF;AAAMH,MAAAA;AAAN,QAAoBC,IAA1B;AAEA,UAAMG,SAAS,GAAGtB,KAAK,CAACuB,SAAN,CAAiBJ,IAAI,IAAI;AACzC,aAAOA,IAAI,CAACE,EAAL,KAAYA,EAAnB;AACD,KAFiB,CAAlB;AAIArB,IAAAA,KAAK,CAACsB,SAAD,CAAL,CAAiBJ,SAAjB,GAA6B,CAACA,SAA9B;AACAjB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AAEAX,IAAAA,GAAG,CAACmC,GAAJ,CAAS,UAASH,EAAG,EAArB,EAAwB;AAACA,MAAAA,EAAD;AAAKH,MAAAA,SAAS,EAAE,CAACA;AAAjB,KAAxB,EAAsDb,IAAtD,CAA4DC,QAAQ,IAAI;AACpE,YAAMa,IAAI,GAAGb,QAAQ,CAACC,IAAtB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,KAJH;AAKD;;AAED,iBAAeM,YAAf,CAA4BN,IAA5B,EAAwC;AACtC,UAAM;AAAEE,MAAAA;AAAF,QAASF,IAAf;AACA,UAAMG,SAAS,GAAGtB,KAAK,CAACuB,SAAN,CAAiBJ,IAAI,IAAI;AACzC,aAAOA,IAAI,CAACE,EAAL,KAAYA,EAAnB;AACD,KAFiB,CAAlB;;AAKA,QAAIrB,KAAK,CAACsB,SAAD,CAAL,CAAiBP,KAAjB,KAA2BrB,QAA/B,EAAwC;AACtCM,MAAAA,KAAK,CAACsB,SAAD,CAAL,CAAiBP,KAAjB,GAAyBrB,QAAzB;AAGAL,MAAAA,GAAG,CAACmC,GAAJ,CAAS,UAASH,EAAG,EAArB,EAAwB;AAACN,QAAAA,KAAK,EAAErB;AAAR,OAAxB,EAA4CW,IAA5C,CAAkDC,QAAQ,IAAI;AAC5D,cAAMa,IAAI,GAAGb,QAAQ,CAACC,IAAtB;AAEAN,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAtB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAND;AAOD,KAXD,MAWM;AACJA,MAAAA,UAAU,CAAC,IAAD,CAAV;AAED;AACF;;AAED,iBAAe6B,gBAAf,CAAgCL,EAAhC,EAA2C;AAEzC,UAAMC,SAAS,GAAGtB,KAAK,CAACuB,SAAN,CAAiBJ,IAAI,IAAI;AACzC,aAAOA,IAAI,CAACE,EAAL,KAAYA,EAAnB;AACD,KAFiB,CAAlB;AAGArB,IAAAA,KAAK,CAAC2B,MAAN,CAAaL,SAAb,EAAwB,CAAxB;AAEAjC,IAAAA,GAAG,CAACuC,MAAJ,CAAY,UAASP,EAAG,EAAxB,EAA2BhB,IAA3B,CAAiCC,QAAQ,IAAI;AAC3C,YAAMa,IAAI,GAAGb,QAAQ,CAACC,IAAtB;AAEAN,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,KALD;AAMD;;AAED,WAASU,SAAT,GAAoB;AAElB7B,IAAAA,KAAK,CAAC8B,OAAN,CAAeX,IAAI,IAAI;AACnBA,MAAAA,IAAI,CAACD,SAAL,GAAiB,CAACpB,MAAlB;AACH,KAFD;AAIAC,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD;;AAGD,WAAS+B,MAAT,CAAgBZ,IAAhB,EAA4BR,KAA5B,EAAwC;AACtCd,IAAAA,UAAU,CAACsB,IAAD,CAAV;AACAxB,IAAAA,WAAW,CAACwB,IAAI,CAACJ,KAAN,CAAX;AACD;;AAGD,sBAEI;AAAA,4BACA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,WAAW,EAAC,wBAHd;AAIE,QAAA,KAAK,EAAIvB,OAJX;AAKE,QAAA,QAAQ,EAAGwC,CAAC,IAAIvC,UAAU,CAACuC,CAAC,CAAChB,MAAF,CAASC,KAAV,CAL5B;AAME,QAAA,SAAS,EAAKe,CAAD,IAAOtB,aAAa,CAACsB,CAAD,CANnC;AAOE,QAAA,SAAS,EAAE;AAPb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAaA;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,8BACF;AACC,QAAA,EAAE,EAAC,YADJ;AAEC,QAAA,SAAS,EAAC,YAFX;AAGC,QAAA,IAAI,EAAC,UAHN;AAIQ,QAAA,QAAQ,EAAEA,CAAC,IAAIH,SAAS,EAJhC;AAKC,QAAA,OAAO,EAAE1B,eAAe,KAAK;AAL9B;AAAA;AAAA;AAAA;AAAA,cADE,eAQF;AACC,QAAA,OAAO,EAAC;AADT;AAAA;AAAA;AAAA;AAAA,cARE,eAWF;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBACUH,KAAK,CAACiC,GAAN,CAAWd,IAAI,iBAEf;AAAA,iCACE;AAAA,oCAEE;AACM,cAAA,SAAS,EAAC,QADhB;AAEM,cAAA,IAAI,EAAC,UAFX;AAEsB,cAAA,OAAO,EAAEA,IAAI,CAACD,SAFpC;AAGM,cAAA,QAAQ,EAAGc,CAAC,IAAIZ,qBAAqB,CAACD,IAAD;AAH3C;AAAA;AAAA;AAAA;AAAA,oBAFF,EASE,EAAEvB,OAAO,KAAKuB,IAAd,kBACoB;AAAO,cAAA,aAAa,EAAEa,CAAC,IAAID,MAAM,CAACZ,IAAD,EAAOa,CAAP,CAAjC;AAAA,yBACOb,IAAI,CAACJ,KADZ,eAEE;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,yCACazB,UAAU,CAAC6B,IAAI,CAACe,SAAN,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVtB,EAkBE,EAAEtC,OAAO,KAAKuB,IAAd,kBAAwB;AAAQ,cAAA,SAAS,EAAC,SAAlB;AAA4B,cAAA,OAAO,EAAEa,CAAC,IAAIN,gBAAgB,CAACP,IAAI,CAACE,EAAN;AAA1D;AAAA;AAAA;AAAA;AAAA,oBAlB1B,eAoBE;AACI,cAAA,SAAS,EAAC,MADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,KAAK,EAAE3B,QAHX,CAII;AAJJ;AAKI,cAAA,QAAQ,EAAGsC,CAAC,IAAIrC,WAAW,CAACqC,CAAC,CAAChB,MAAF,CAASC,KAAV,CAL/B,CAMI;;AANJ;AAAA;AAAA;AAAA;AAAA,oBApBF,EA6BGrB,OAAO,KAAKuB,IAAZ,iBACC;AACI,cAAA,SAAS,EAAC,SADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,aAAa,EAAGa,CAAC,IAAIrC,WAAW,CAACwB,IAAI,CAACJ,KAAN,CAHpC;AAII,cAAA,KAAK,EAAErB,QAJX;AAKI,cAAA,MAAM,EAAGsC,CAAC,IAAIP,YAAY,CAACN,IAAD,CAL9B;AAMI,cAAA,QAAQ,EAAGa,CAAC,IAAIrC,WAAW,CAACqC,CAAC,CAAChB,MAAF,CAASC,KAAV,CAN/B,CAOI;;AAPJ;AAAA;AAAA;AAAA;AAAA,oBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAASE,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,gBAFA;AADV;AAAA;AAAA;AAAA;AAAA,cAXE;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA,kBAFJ;AA+EH,CAjMD;;GAAM9B,S;;KAAAA,S;AAmMN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport api from '../../services/api';\nimport formatDate from '../../utils/formaDate';\n\ninterface Todo {\n  id: string;\n  title: string;\n  completed: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst Dashboard: React.FC = () => {\n\n\n    const [newTodo, setNewTodo] = useState('');\n    const [editText, setEditText] = useState('');\n    const [editing, setEditing] = useState<Todo | null>(null);\n    const [ toggle, setToggle ] = useState(false);\n    const [ todos, setTodos] = useState<Todo[]>([]) ;\n\n    var val = false;\n\n    const activeTodoCount = 0;\n\n    useEffect(() => {\n      api.get<Todo[]>('/tasks').then(response => {\n        \n        setTodos(response.data)\n      }); \n      console.log(todos)\n    }, [])\n\n    \n\n    async function handleNewTodo(event: any): Promise<void> {\n        if (event.key !== 'Enter') {\n          return\n        }\n        event.preventDefault();\n\n        api.post('/tasks', {title: event.target.value, completed: false }).then( response => {\n          const todo = response.data;\n\n          setTodos([...todos, todo]);\n          console.log(todos);\n        });\n\n        setNewTodo(\"\")\n        console.log(newTodo);\n    }\n\n    async function handleCheckChangeTodo(todo: Todo){\n\n      const { id, completed } = todo;\n\n      const todoIndex = todos.findIndex( todo => {\n        return todo.id === id\n      });\n\n      todos[todoIndex].completed = !completed;\n      setTodos([...todos]);\n      \n      api.put(`/tasks/${id}`, {id, completed: !completed }).then( response => {\n          const todo = response.data;\n          \n          console.log(todo);\n        });\n    }\n\n    async function handleSubmit(todo: Todo) {\n      const { id } = todo\n      const todoIndex = todos.findIndex( todo => {\n        return todo.id === id\n      });\n\n\n      if( todos[todoIndex].title !== editText){\n        todos[todoIndex].title = editText;\n  \n        \n        api.put(`/tasks/${id}`, {title: editText }).then( response => {\n          const todo = response.data;\n          \n          setTodos([...todos]);\n          console.log(todo);\n          setEditing(null)\n        });\n      }else {\n        setEditing(null)\n\n      }\n    }\n\n    async function handleRemoveTodo(id: string){\n\n      const todoIndex = todos.findIndex( todo => {\n        return todo.id === id\n      });\n      todos.splice(todoIndex, 1);\n\n      api.delete(`/tasks/${id}`).then( response => {\n        const todo = response.data;\n        \n        setTodos([...todos])\n        console.log(todo);\n      });\n    }\n\n    function toggleAll(){\n      \n      todos.forEach( todo => {\n          todo.completed = !toggle;\n      });\n\n      setToggle(!toggle)\n      setTodos([...todos])\n    }\n\n\n    function onEdit(todo: Todo, event: any) {\n      setEditing(todo)\n      setEditText(todo.title)\n    }\n\n\n    return ( \n    \n        <>\n        <header className=\"todoapp\">\n          <h1>todos</h1>\n          <input\n            id=\"newField\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value = {newTodo}\n            onChange={ e => setNewTodo(e.target.value)}\n            onKeyDown = {(e) => handleNewTodo(e)}\n            autoFocus={true}\n          />\n        </header>\n        <section className=\"main\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"toggle-all\"\n\t\t\t\t\t\t\tclassName=\"toggle-all\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n              onChange={e => toggleAll()}\n\t\t\t\t\t\t\tchecked={activeTodoCount === 0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"toggle-all\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ul className=\"todo-list\">\n              { todos.map( todo => \n              \n                <li key={todo.id} >\n                  <div >\n                    \n                    <input \n                          className=\"toggle\" \n                          type=\"checkbox\" checked={todo.completed} \n                          onChange={ e => handleCheckChangeTodo(todo)}>\n                            \n                    </input>\n                  { \n                    !(editing === todo) &&\n                                        <label onDoubleClick={e => onEdit(todo, e)} >\n                                              {todo.title}\n                                          <span className=\"date\">\n                                            Create at {formatDate(todo.createdAt)}\n                                          </span> \n                                        </label>  \n                  }\n\n                  { !(editing === todo) &&  <button className=\"destroy\" onClick={e => handleRemoveTodo(todo.id)} /> }\n\n                    <input \n                        className=\"edit\"\n                        type=\"text\"\n                        value={editText}\n                        // onBlur={e => handleSubmit(todo)}\n                        onChange= {e => setEditText(e.target.value)}\n                        // onKeyDown={e => handleNewTodo(e)}\n                    />\n\n                    {editing === todo &&  \n                      <input \n                          className=\"editing\"\n                          type=\"text\"\n                          onDoubleClick={ e => setEditText(todo.title)}\n                          value={editText}\n                          onBlur={ e => handleSubmit(todo)}\n                          onChange= {e => setEditText(e.target.value)}\n                          // onKeyDown={e => handleNewTodo(e)}\n                      >\n                      </input> \n                  } \n                  </div>\n\n                </li>\n              )}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</section>        \n      </>\n    )\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}