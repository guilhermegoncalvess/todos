{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Documents/desafio-bright-cities/todo-react/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState('');\n  const [todo, setTodo] = useState([]);\n\n  function handleNewTodo(event) {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    event.preventDefault();\n\n    const val = /*#__PURE__*/_jsxDEV(\"document\", {\n      className: \"getElementById\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this)(\"newField\").valueOf;\n\n    console.log(val);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: \"newField\",\n        className: \"new-todo\",\n        placeholder: \"What needs to be done?\",\n        onKeyDown: e => handleNewTodo(e) // onKeyDown={ e => (e) }\n        // autoFocus={true}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"toggle-all\",\n        className: \"toggle-all\",\n        type: \"checkbox\" //   onChange={ e => this.toggleAll(e) }\n        //   checked={activeTodoCount === 0}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggle-all\",\n        children: \"Mark all as complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"li.completed\",\n          children: \"sadsadsa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"sadsadsa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"sadsadsa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"sadsadsa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"cJYsmRk2e5JYgpa3uKiTU6K3rak=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/guilherme/Documents/desafio-bright-cities/todo-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","Dashboard","newTodo","setNewTodo","todo","setTodo","handleNewTodo","event","key","preventDefault","val","valueOf","console","log","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAEI,IAAF,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;;AAEA,WAASM,aAAT,CAAuBC,KAAvB,EAAmD;AAC/C,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvB;AACH;;AAEDD,IAAAA,KAAK,CAACE,cAAN;;AAEA,UAAMC,GAAG,GAAG;AAAU,MAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,aAAiD,UAAjD,EAA6DC,OAAzE;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH;;AAED,sBACI;AAAA,4BACA;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAC,UADN;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,WAAW,EAAC,wBAHd;AAIE,QAAA,SAAS,EAAKI,CAAD,IAAOR,aAAa,CAACQ,CAAD,CAJnC,CAKE;AACA;;AANF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAcA;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,8BACA;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,IAAI,EAAC,UAHP,CAIA;AACA;;AALA;AAAA;AAAA;AAAA;AAAA,cADA,eAQA;AACE,QAAA,OAAO,EAAC,YADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,eAaA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAtDD;;GAAMb,S;;KAAAA,S;AAwDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Dashboard: React.FC = () => {\n\n    const [newTodo, setNewTodo] = useState('');\n    const [ todo, setTodo] = useState([]);\n\n    function handleNewTodo(event: React.KeyboardEvent) {\n        if (event.key !== 'Enter') {\n            return;\n        }\n\n        event.preventDefault();\n\n        const val = <document className=\"getElementById\"></document>(\"newField\").valueOf;\n\n        console.log(val)\n    }\n\n    return ( \n        <div>\n        <header className=\"todoapp\">\n          <h1>todos</h1>\n          <input\n            ref=\"newField\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown = {(e) => handleNewTodo(e)}\n            // onKeyDown={ e => (e) }\n            // autoFocus={true}\n          />\n        </header>\n        \n        \n        <section className=\"main\">\n        <input\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          type=\"checkbox\"\n        //   onChange={ e => this.toggleAll(e) }\n        //   checked={activeTodoCount === 0}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n        >\n          Mark all as complete\n        </label>\n        <ul className=\"todo-list\">\n          <li className=\"li.completed\" >sadsadsa</li>\n          <li>sadsadsa</li>\n          <li>sadsadsa</li>\n          <li>sadsadsa</li>\n        </ul>\n      </section>\n      </div>\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}