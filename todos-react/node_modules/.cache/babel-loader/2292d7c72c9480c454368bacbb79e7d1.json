{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Documents/desafio-bright-cities/todo-react/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState('');\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    api.get('/tasks').then(response => {\n      const todo = response.data;\n      setTodos(todo);\n      console.log(todos);\n    });\n  }, []); // title: event.target.value, completed: false\n\n  async function handleNewTodo(event) {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    event.preventDefault();\n    console.log(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: todo.title\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this))\n  }, void 0, false);\n}; // <section className=\"main\">\n// <input\n//   id=\"toggle-all\"\n//   className=\"toggle-all\"\n//   type=\"checkbox\"\n// //   onChange={ e => this.toggleAll(e) }\n// //   checked={activeTodoCount === 0}\n// />\n// <label\n//   htmlFor=\"toggle-all\"\n// >\n//   Mark all as complete\n// </label>\n//   {\n//     todos.map( todo => {\n//       <ul className=\"todo-list\">\n//        <li key={todo.id} className=\"li.completed\" >{todo.title}</li>\n//       </ul>\n//     })\n//   }\n// </section>\n\n\n_s(Dashboard, \"QPUln2XIDroAIiaRzTKxcWl3r9I=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/guilherme/Documents/desafio-bright-cities/todo-react/src/pages/Dashboard/index.tsx"],"names":["React","useEffect","useState","api","Dashboard","newTodo","setNewTodo","todos","setTodos","get","then","response","todo","data","console","log","handleNewTodo","event","key","preventDefault","target","value","map","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,GAAP,MAAgB,oBAAhB;;;;AAUA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAEK,KAAF,EAASC,QAAT,IAAqBN,QAAQ,CAAS,EAAT,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACM,GAAJ,CAAc,QAAd,EAAwBC,IAAxB,CAA8BC,QAAQ,IAAI;AACxC,YAAMC,IAAY,GAAGD,QAAQ,CAACE,IAA9B;AACAL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,KAJD;AAKC,GANM,EAMJ,EANI,CAAT,CAL8B,CAY5B;;AAGF,iBAAeS,aAAf,CAA6BC,KAA7B,EAAwD;AACpD,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzB;AACD;;AACDD,IAAAA,KAAK,CAACE,cAAN;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACG,MAAN,CAAaC,KAAzB;AAGH;;AAGD,sBACI;AAAA,cAeCd,KAAK,CAACe,GAAN,CAAWV,IAAI,iBAAI;AAAA,gBAAmBA,IAAI,CAACW;AAAxB,OAASX,IAAI,CAACY,EAAd;AAAA;AAAA;AAAA;AAAA,YAAnB;AAfD,mBADJ;AAoBH,CA9CD,C,CAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GArEMpB,S;;KAAAA,S;AAsEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport api from '../../services/api';\n\ninterface Todo {\n  id: string;\n  title: string;\n  completed: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nconst Dashboard: React.FC = () => {\n\n    const [newTodo, setNewTodo] = useState('');\n    const [ todos, setTodos] = useState<Todo[]>([]) ;\n\n    useEffect(() => {\n      api.get<Todo>('/tasks').then( response => {\n        const todo: Todo[] = response.data;\n        setTodos(todo)\n        console.log(todos)\n      })\n      }, []);\n      // title: event.target.value, completed: false\n    \n\n    async function handleNewTodo(event: any): Promise<void> {\n        if (event.key !== 'Enter') {\n          return;\n        }\n        event.preventDefault();\n        console.log(event.target.value);\n\n       \n    }\n\n\n    return ( \n        <>\n        {/* <header className=\"todoapp\">\n          <h1>todos</h1>\n          <input\n            id=\"newField\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyDown = {(e) => handleNewTodo(e)}\n            \n            // onKeyDown={ e => (e) }\n            // autoFocus={true}\n          />\n        </header> */}\n\n        \n\t\t\t\t\t\t\t{ todos.map( todo => <li key={todo.id}>{todo.title}</li> )}\n        \n      </>\n    )\n}\n \n        \n// <section className=\"main\">\n// <input\n//   id=\"toggle-all\"\n//   className=\"toggle-all\"\n//   type=\"checkbox\"\n// //   onChange={ e => this.toggleAll(e) }\n// //   checked={activeTodoCount === 0}\n// />\n// <label\n//   htmlFor=\"toggle-all\"\n// >\n//   Mark all as complete\n// </label>\n//   {\n//     todos.map( todo => {\n//       <ul className=\"todo-list\">\n//        <li key={todo.id} className=\"li.completed\" >{todo.title}</li>\n//       </ul>\n//     })\n//   }\n// </section>\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}